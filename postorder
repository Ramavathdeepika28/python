class TreeNode:
    def __init__(self, val):
        self.data = val
        self.left = None
        self.right = None 
    def create_btree(arr, i, n):
        if i > n:
            return None
        root = TreeNode(arr[i-1])
        root.left = TreeNode.create_btree(arr, 2 * i, n)  
        root.right = TreeNode.create_btree(arr, 2 * i + 1, n)
        return root
    def postorder(root):
        if root is None:
            return
        print(root.data, end=" ")
        TreeNode.postorder(root.left)  
        TreeNode.postorder(root.right)
arr = [3, 4, 5, 6, 7, 8, 9, 0]
btree = TreeNode.create_btree(arr, 1, len(arr))
print("Postorder Traversal:")
TreeNode.postorder(btree)
